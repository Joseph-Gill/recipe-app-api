# Version of docker-compose syntax that we are using
version: "3.9"

# Services being run by docker-compose
services:
  # Name of the service being run
  app:
    # Tells docker-compose where to build the dockerfile, in this case the context tells it to user the current root dir
    build:
      context: .
      # When running this image via docker-compose, create a build argument called DEV set as true
      args:
        - DEV=true
    # Port mapping of the local machine to the docker container
    ports:
      - "8000:8000"
    # Volume mapping of locations on the local machine to the docker container, this allows you to dynamically update
    # the volume inside the cotainer with changes made on the local machine without having to rebuild the container
    volumes:
      - ./app:/app
      # Setup volume mapping for the static data
      - dev-static-data:/vol/web
    # Command that is used to run the service
    # First - run the wait_for_db command to make sure postgres is fully started
    # Second - run the migrate command to check that all migrations have been applied
    # Third - run the dev server
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      # Nane of the service it is connecting with
      - DB_HOST=db
      # Name of the db on the service
      - DB_NAME=devdb
      # Credentials for the user on the service
      - DB_USER=devuser
      - DB_PASS=changeme
      # Set DEBUG as true when passed to django settings.py
      - DEBUG=1
    # Tells docker compose that this service needs to wait for this other service to be started first
    depends_on:
      - db

  db:
    # Image the service is using, in this case a lightweight version of the postgres image on docker hub
    image: postgres:13-alpine
    # Volumen mapping for the database, [name_of_the_volume]:[location inside the container per documentation]
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    # These set the initial configuration for our database service
    environment:
      # Name of the database for local development service
      - POSTGRES_DB=devdb
      # Credentials for the user created for the local development service
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

volumes:
  # Name of the volume, docker-compose will store it in the default location
  dev-db-data:
  dev-static-data:
